/* Plain+Simple TextManipulator GUI version */
package test;
import java.util.Vector;
import java.util.Arrays;

public class TextManipulatorGUI extends javax.swing.JFrame {

    /**
     * Creates new form TextManipulatorGUI
     */
    public TextManipulatorGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        list_title = new javax.swing.JLabel();
        analyzetext_button = new javax.swing.JButton();
        wordcount_label = new javax.swing.JLabel();
        charcount_label = new javax.swing.JLabel();
        linecount_label = new javax.swing.JLabel();
        sentencecount_label = new javax.swing.JLabel();
        text_field = new javax.swing.JScrollPane();
        text_input = new javax.swing.JTextArea();
        scramblelines_button = new javax.swing.JButton();
        removepunctuation_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Plain+Simple TextManipulator");

        list_title.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        list_title.setText("Available Functions");

        analyzetext_button.setText("Analyze Text");
        analyzetext_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzetext_buttonActionPerformed(evt);
            }
        });

        text_input.setColumns(20);
        text_input.setRows(5);
        text_input.setText("[Enter text here]");
        text_field.setViewportView(text_input);

        scramblelines_button.setText("Scramble Lines");
        scramblelines_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scramblelines_buttonActionPerformed(evt);
            }
        });

        removepunctuation_button.setText("Remove Punctuation");
        removepunctuation_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removepunctuation_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list_title)
                    .addComponent(analyzetext_button)
                    .addComponent(scramblelines_button)
                    .addComponent(removepunctuation_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wordcount_label, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charcount_label)
                        .addGap(22, 22, 22)
                        .addComponent(linecount_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sentencecount_label)
                        .addGap(0, 88, Short.MAX_VALUE))
                    .addComponent(text_field))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {charcount_label, linecount_label, sentencecount_label, wordcount_label});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {analyzetext_button, removepunctuation_button, scramblelines_button});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(list_title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analyzetext_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scramblelines_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removepunctuation_button))
                    .addComponent(text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wordcount_label, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(charcount_label)
                        .addComponent(linecount_label)
                        .addComponent(sentencecount_label)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {charcount_label, linecount_label, sentencecount_label, wordcount_label});

        pack();
    }// </editor-fold>                        

    private void analyzetext_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        String text = GetText();
        int word_count = text.length()
                - text.replace(" ", "").replace("\n", "").length() + 1;
        wordcount_label.setText(word_count + " words");
        int char_count = text.replace("\n", "").length();
        charcount_label.setText(char_count + " characters");
        int line_count = text.length() - text.replace("\n", "").length() + 1;
        linecount_label.setText(line_count + " lines");
        int sentence_count = text.length()
                - text.replace(".", "").replace("?", "").replace("!", "")
                .length();
        if(sentence_count == 0)
            sentence_count++;
        sentencecount_label.setText(sentence_count + " sentences");
    }                                                  

    private void scramblelines_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        String text = GetText();
        String[] lines = text.split("\\r?\\n"); /* create an array that holds each individual line */
        Vector<String> lines_vector = new Vector(Arrays.asList(lines)); /* copy array to vector for easier manipulation */
        text = ""; /* clear variable once it has been split into lines*/
        while(lines_vector.size() > 0) { /* runs until all lines have been copied */
            int line_number = GenerateRandomNumber(lines_vector.size() - 1); /* generate random number within range of vector */
            text = text + lines_vector.get(line_number) + "\n"; /* copy corresponding element to text */
            lines_vector.remove(line_number); /* remove the element from the vector so it cannot be copied again */
        }
        SetText(text);
    }                                                    

    private void removepunctuation_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        String text = GetText();
        text = RemovePunctuation(text);
        SetText(text);
    }                                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextManipulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextManipulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextManipulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextManipulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextManipulatorGUI().setVisible(true);
            }
        });
    }
    public static int GenerateRandomNumber(int upper_bound) {
        //int random = (int) (Math.floor(Math.random() * (upper_bound + 1)));
        return (int) Math.floor(Math.random() * (upper_bound + 1));
    }
    public static String RemovePunctuation(String text) {
        String new_text = "";
        for(int i = 0; i < text.length(); i++) {
            char c = text.charAt(i);
            if(!((c > 32 && c < 48) || (c > 57 && c < 65) || (c > 90 && c < 97) || (c > 122 && c < 127)))
                new_text = new_text + c;
        }
        return new_text;
    }
    private String GetText() {
        return text_input.getText();
    }
    private void SetText(String text) {
        text_input.setText(text);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton analyzetext_button;
    private javax.swing.JLabel charcount_label;
    private javax.swing.JLabel linecount_label;
    private javax.swing.JLabel list_title;
    private javax.swing.JButton removepunctuation_button;
    private javax.swing.JButton scramblelines_button;
    private javax.swing.JLabel sentencecount_label;
    private javax.swing.JScrollPane text_field;
    private javax.swing.JTextArea text_input;
    private javax.swing.JLabel wordcount_label;
    // End of variables declaration                   
}
